apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: web
spec:
  strategy:
    rollingUpdate:
      maxUnavailable: {{ .Values.global.rollingUpdate.maxUnavailable | default 0 }}
  replicas: 1
  template:
    metadata:
      labels:
        service: web
    spec:
      containers:
      - name: web
        command: [
            "node", "/usr/src/app/component/dist/index.js",
            "--config", "/etc/config/config.json",
            "--listenPort", "80",
            "--baseExternalUrl", {{ .Values.global.externalUrl | quote }},
            "--useLocalStyleSheet", {{ .Values.global.useLocalStyleSheet | default .Values.useLocalStyleSheet | quote }},
            "--registryApiBaseUrlInternal", "http://registry-api/v0",
            {{- range .Values.gapiIds }}
            "--gapiIds", {{ . | quote }},
            {{- end }}
        ]
        readinessProbe:
          httpGet:
            path: "/"
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 10
{{- if .Values.global.enableLivenessProbes }}
        livenessProbe:
          httpGet:
            path: "/"
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 10
{{- end }}
        resources:
{{ toYaml .Values.resources | indent 10 }}
        env:
        - name: NODE_ENV
          value: production
        image: {{ template "dockerimage" . }}
        imagePullPolicy: {{ .Values.image.pullPolicy | default .Values.global.image.pullPolicy }}
        volumeMounts:
        - mountPath: "/etc/config"
          name: config
      volumes:
      - name: config
        configMap:
          name: web-app-config
          items:
          - key: web.json
            path: config.json
